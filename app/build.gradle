apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply from: "$rootDir/ktlint.gradle"
apply from: "$rootDir/jacoco.gradle"
apply from: "$rootDir/detekt.gradle"
apply from: "$rootDir/git-hooks.gradle"

afterEvaluate {
    testReleaseUnitTest.enabled false
    assemble.dependsOn "installGitHooks"
    preBuild.dependsOn "installGitHooks"
    ktlint.dependsOn "checkDuplication"
    lintRelease.dependsOn "ktlint"
    testReleaseUnitTest.dependsOn "lintRelease"
    jacocoTestReport.dependsOn "testReleaseUnitTest"
    jacocoVerificationTask.dependsOn "jacocoTestReport"
    assemble.dependsOn "jacocoVerificationTask"
    assembleDebugAndroidTest.dependsOn "assemble"
    build.dependsOn "assembleDebugAndroidTest"
}

android {

//    signingConfigs {
//        config {
//            keyAlias 'key0'
//            keyPassword '123456789'
//            storeFile file('./mvvm_clean_arch.jks')
//            storePassword '123456789'
//        }
//    }

    compileSdkVersion 29
    defaultConfig {
        applicationId "com.mahmoudibra.advice"
        minSdkVersion 23
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        testInstrumentationRunnerArguments clearPackageData: 'true'
        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true
    }

    testOptions {
        execution 'ANDROIDX_TEST_ORCHESTRATOR'
    }

    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField "String", 'BASE_URL', '"http://api.acme.international"'

//            signingConfig signingConfigs.config
        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField "String", 'BASE_URL', '"http://api.acme.international"'
//            signingConfig signingConfigs.config
        }
    }

    lintOptions {
        abortOnError true
    }

    dataBinding {
        enabled = true
    }

    aaptOptions {
        // The aapt tool can optimize the image resources placed in res/drawable/ with lossless compression during the build process.
        cruncherEnabled = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

task checkDuplication() {
    group 'Verification'
    description 'Checks for duplicate code using simian analyzer'
    doLast {
        def process = "java -jar ./simian-2.5.10.jar -language=java -threshold=10 -excludes=**/*test*.kt **/*.kt".
            execute()
        process.waitForProcessOutput(System.out, System.err)
        if (process.exitValue() == 1) {
            throw new Exception("Duplicate Found")
        }
    }
}

dependencies {
    def lifecycle_version = "2.1.0"
    def room_version = "2.2.3"
    def kotlin_version = '1.3.50'
    def espresso_version = "3.2.0"
    def timberVersion = '4.7.1'
    def recyclerViewVersion = '1.1.0'
    def moshiVersion="1.8.0"
    def retrofit2_version = "2.6.1"
    def kotlinCoroutineVersion = "1.3.1"
    def okhttp_version = "4.1.0"

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'com.google.android.material:material:1.0.0'
    implementation "androidx.recyclerview:recyclerview:$recyclerViewVersion"
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.multidex:multidex:2.0.1'
    implementation 'androidx.annotation:annotation:1.1.0'

    // Logging
    implementation "com.jakewharton.timber:timber:$timberVersion"

    // Circle Image
    implementation 'de.hdodenhof:circleimageview:3.0.1'

    // Glide
    implementation('com.github.bumptech.glide:glide:4.9.0')
    kapt 'com.github.bumptech.glide:compiler:4.9.0'

    // Android KTX
    implementation 'androidx.core:core-ktx:1.1.0'

    // Gson Converter
    implementation 'com.google.code.gson:gson:2.8.5'

    //Moshi
    implementation "com.squareup.moshi:moshi-kotlin:$moshiVersion"
    kapt "com.squareup.moshi:moshi-kotlin-codegen:$moshiVersion"

    //Retrofit2
    implementation "com.squareup.retrofit2:retrofit:$retrofit2_version"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofit2_version"

    //Okhttp3
    implementation "com.squareup.okhttp3:logging-interceptor:$okhttp_version"
    implementation 'com.squareup.okhttp3:okhttp:4.1.0'


    // ViewModel and LiveData
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"
    // optional - Test helpers for LiveData
    testImplementation "androidx.arch.core:core-testing:$lifecycle_version"


    // Room
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    // optional - Kotlin Extensions and Coroutines support for Room
    implementation "androidx.room:room-ktx:$room_version"
    // Test helpers
    testImplementation "androidx.room:room-testing:$room_version"

    // Kotlin Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlinCoroutineVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlinCoroutineVersion"
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.3.0'

    //Assertion
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.ext:truth:1.2.0'
    androidTestImplementation 'com.google.truth:truth:0.44'
    testImplementation "com.google.truth:truth:0.44"

    // Android Testing Support Library's runner and rules
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test:rules:1.2.0'

    // Espresso
    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso_version"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$espresso_version"
    androidTestImplementation "androidx.test.espresso:espresso-intents:$espresso_version"
    androidTestImplementation "androidx.test.espresso:espresso-accessibility:$espresso_version"
    androidTestImplementation "androidx.test.espresso:espresso-web:$espresso_version"
    androidTestImplementation "androidx.test.espresso.idling:idling-concurrent:$espresso_version"
    implementation "androidx.test.espresso:espresso-idling-resource:$espresso_version"

    // UI Automating
    androidTestImplementation 'androidx.test.uiautomator:uiautomator:2.2.0'

    // Orchestrator Test
    androidTestUtil 'androidx.test:orchestrator:1.2.0'
    testImplementation 'org.slf4j:slf4j-simple:1.7.21'

    // wiremock
    testImplementation 'com.github.tomakehurst:wiremock:2.24.0'

    // Mocking Library
    testImplementation 'io.mockk:mockk:1.9.3'

}
